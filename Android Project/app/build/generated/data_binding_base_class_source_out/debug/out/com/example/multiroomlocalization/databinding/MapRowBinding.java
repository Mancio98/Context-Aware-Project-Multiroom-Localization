// Generated by view binder compiler. Do not edit!
package com.example.multiroomlocalization.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.multiroomlocalization.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MapRowBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView MapId;

  @NonNull
  public final TextView border2;

  @NonNull
  public final Button buttonSelectMap;

  @NonNull
  public final TextView isReady;

  @NonNull
  public final TextView mapName;

  private MapRowBinding(@NonNull RelativeLayout rootView, @NonNull TextView MapId,
      @NonNull TextView border2, @NonNull Button buttonSelectMap, @NonNull TextView isReady,
      @NonNull TextView mapName) {
    this.rootView = rootView;
    this.MapId = MapId;
    this.border2 = border2;
    this.buttonSelectMap = buttonSelectMap;
    this.isReady = isReady;
    this.mapName = mapName;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MapRowBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MapRowBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.map_row, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MapRowBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.MapId;
      TextView MapId = ViewBindings.findChildViewById(rootView, id);
      if (MapId == null) {
        break missingId;
      }

      id = R.id.border2;
      TextView border2 = ViewBindings.findChildViewById(rootView, id);
      if (border2 == null) {
        break missingId;
      }

      id = R.id.buttonSelectMap;
      Button buttonSelectMap = ViewBindings.findChildViewById(rootView, id);
      if (buttonSelectMap == null) {
        break missingId;
      }

      id = R.id.isReady;
      TextView isReady = ViewBindings.findChildViewById(rootView, id);
      if (isReady == null) {
        break missingId;
      }

      id = R.id.mapName;
      TextView mapName = ViewBindings.findChildViewById(rootView, id);
      if (mapName == null) {
        break missingId;
      }

      return new MapRowBinding((RelativeLayout) rootView, MapId, border2, buttonSelectMap, isReady,
          mapName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
